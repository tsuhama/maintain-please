// backporting fix branch to all stable version branches by creating pull request against each of the stable version
import { Branch, GitControl } from "../api/git.js";
import { StableVersionMatcher } from "../core/matcher.js";
import { StableVersionBranch } from "./maintenance.js";

export async function backportFixBranch(
  git: GitControl,
  matcher: StableVersionMatcher,
  fixBranchName: string,
) {
  const branches = await git.getBranches();
  const stableVersionBranches = branches
    .map((it) => toStaleVersionBranch(matcher, it))
    .filter((it) => it !== null);
  const fixBranch = await git.getBranch(fixBranchName);
  for (const it of stableVersionBranches) {
    console.info(
      `creating backport pull request from ${fixBranchName} against ${it.branch.name}.`,
    );
    const title = `backporting ${fixBranchName} to ${it.branch.name}`;
    const body = "this PR was generated by maintain-please...";
    const pr = await git.createPullRequest(
      title,
      body,
      fixBranch.name,
      it.branch.name,
    );
    console.info(
      `successfully created backport pull request ${pr.number} for stable version ${it.version}.`,
    );
  }
}

function toStaleVersionBranch(
  matcher: StableVersionMatcher,
  branch: Branch,
): StableVersionBranch | null {
  if (matcher.matches(branch)) {
    return {
      branch: branch,
      version: matcher.getVersion(branch),
    };
  } else {
    return null;
  }
}
